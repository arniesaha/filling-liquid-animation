$bodyColorBackground: rgb(213, 247, 255);

$counterColor: rgb(125, 125, 125);

$glassColorBackground: rgba(255, 255, 255, 0.95);
$glassColorBorder: rgba(0, 0, 0, 0.1);
$glassHeight: 30rem;
$glassWidth: $glassHeight / 2;

$liquidColorFront: rgba(131, 232, 254, 1);
$liquidColorBack: darken($liquidColorFront, 25%);

*,
*::before,
*::after {
  box-sizing: border-box;
  outline: none;
}

body {
  align-items: center;
  background-color: $bodyColorBackground;
  display: flex;
  font: 1rem 'Open Sans', helvetica, sans-serif;
  height: 100vh;
  justify-content: center;
  margin: 0
}

button {
  background-color: $liquidColorBack;
  border: 1px solid grey;
  border-radius: 0.5rem;
  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),
              0 3px 1px -2px rgba(0, 0, 0, 0.12),
              0 1px 5px 0 rgba(0,0,0,0.2);
  cursor: pointer;
  display: block;
  font-size: 1rem;
  padding: 0.5rem 1.5rem;
  position: absolute;
  top: calc(50vh + (#{$glassHeight}) / 2 + 2rem);
  transition: .3s ease-out;

  &:focus,
  &:hover {
    background-color: $liquidColorFront;
    box-shadow: 0 3px 3px 0 rgba(0, 0, 0, 0.14),
                0 1px 7px 0 rgba(0, 0, 0, 0.12),
                0 3px 1px -1px rgba(0,0,0,0.2);
  }
}

.counter{
  align-items:center;
  color: $counterColor;
  display: flex;
  font-size: 4rem;
  height: 100%;
  justify-content:center;
  mix-blend-mode: difference;
  pointer-events: none;
  position: absolute;
  width: 100%;
  z-index: 4;
}

.glass {
  background-color: $glassColorBackground;
  border: 1px solid $glassColorBorder;
  border-radius: 0.5rem 0.5rem 3rem 3rem;
  height: $glassHeight;
  padding: 3rem 0.75rem 1rem;
  width: $glassWidth;
  z-index: 1;

  &__inner {
    border-radius: 0 0 3rem 3rem;
    overflow: hidden;
    position: relative;
    height: 100%;
    width: 100%;
    z-index: 2;

    &::after,
    &::before {
      background-color: $glassColorBackground;
      content: '';
      mix-blend-mode: soft-light;
      position: absolute;
      z-index: 3;
    }

    // Reflection
    &::after {
      bottom: 0;
      border-radius: 0 0 3rem 0;
      content: '';
      height: $glassHeight - 2rem;
      right: 0;
      width: $glassWidth / 4;
    }

    // Sparkles
    &::before {
      animation: sparkle-action 3s infinite linear;
      border-radius: 100%;
      bottom: 3rem;
      height: 1rem;
      left: 2rem;
      width: 1rem;
    }
  }
}

.liquid {
  background-color: $liquidColorFront;
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  transform:translate(0, 100%);
  width: 100%;
  z-index:2;

  &--hidden {
    display: none;
  }

  &__wave {
    bottom: 100%;
    position: absolute;
    width: 200%;

    &--back {
      animation: wave-back-action 1.4s infinite linear;
      fill: $liquidColorBack;
      right: 0;
    }

    &--front {
      animation: wave-front-action 0.7s infinite linear;
      fill: $liquidColorFront;
      left: 0;
      margin-bottom: -0.0625rem;
    }
  }
}

.pour {
  animation: pour-action 0.25s linear;
  background: $liquidColorBack;
  border-radius: 2rem;
  bottom: calc(50vh - (#{$glassHeight} / 2) + 1.25rem);
  left: 50%;
  margin-left: -1rem; // Margin instead of translate to prevent jumping content.
  mix-blend-mode: multiply; // To keep the glasses border.
  position: absolute;
  top: -2rem;
  transition: top 1s linear;
  transform: scale(1);
  transform-origin: bottom;
  transition: transform 0.5s ease-out;
  width: 2rem;

  &--end {
    transform: scaleY(0);
  }

  &--hidden {
    display: none;
  }
}

@keyframes pour-action {
  0% {
    transform: translateY(-100%);
  }
  100% {
    transform: translateY(0);
  }
}

// Speed it up to about 1-2s so nobody sees the flickering.
@keyframes sparkle-action {
  0% {
    transform: translate(0, 0);
  }

  25% {
    transform: translate(0, -#{$glassHeight});
  }

  26% {
    transform: translate(calc((#{$glassWidth} - 1.5rem) / 12 * 1), 0);
  }
  50% {
    transform: translate(calc((#{$glassWidth} - 1.5rem) / 12 * 1), -#{$glassHeight});
  }

  51% {
    transform: translate(calc((#{$glassWidth} - 1.5rem) / 12 * 8), 0);
  }
  75% {
    transform: translate(calc((#{$glassWidth} - 1.5rem) / 12 * 8), -#{$glassHeight});
  }

  76% {
    transform: translate(calc((#{$glassWidth} - 1.5rem) / 12 * 6), 0);
  }
  99% {
    transform: translate(calc((#{$glassWidth} - 1.5rem) / 12 * 6), -#{$glassHeight});
  }

  100% {
    transform: translate(0, 0);
  }
}

@keyframes wave-front-action {
  100% {
    transform: translate(-50%, 0);
  }
}

@keyframes wave-back-action {
  100% {
    transform: translate(50%, 0);
  }
}
